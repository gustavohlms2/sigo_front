{"remainingRequest":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/processo/TipoProcesso.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/processo/TipoProcesso.vue","mtime":1611087941755},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB1cmxBUEkgZnJvbSAnLi4vLi4vdXRpbGl0aWVzL3VybGFwaSc7Ci8vaW1wb3J0IHsgRGF0ZXRpbWUgfSBmcm9tICd2dWUtZGF0ZXRpbWUnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1RpcG9wcm9jZXNzbycsICAKICAgIGNvbXBvbmVudHM6IHsKICAvLyAgICAgIGRhdGV0aW1lOiBEYXRldGltZQogICAgfSwgIAogICAgY3JlYXRlZDogZnVuY3Rpb24oKXsgICAgICAgCiAgICAgICAgdGhpcy5nZXRUaXBvcHJvY2Vzc28oKTsKICAgIH0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGlwb3Byb2Nlc3NvczogW10sCiAgICAgICAgICAgIGZpbHRlcmVkVGlwb3Byb2Nlc3NvczogW10sCiAgICAgICAgICAgIHRpcG9wcm9jZXNzb0FsdGVyYXI6IHt9LAogICAgICAgICAgICBsaXN0YVJlcG9zaXRvcmlvOiBbXSwKICAgICAgICAgICAgdHh0QnVzY2E6ICcnLAogICAgICAgICAgICBpZEV4Y2x1c2FvOiAnJywKICAgICAgICAgICAgaXNTaG93TW9kYWxBbHRlcmFjYW86IGZhbHNlLAogICAgICAgICAgICBpc1Nob3dNb2RhbEV4Y2x1c2FvOiBmYWxzZSwKICAgICAgICAgICAgZXJyb3JzOiBbXSwKICAgICAgICAgICAgaXNDb25uZWN0OiB0cnVlCiAgICAgICAgfQogICAgfSwKICAgIGZpbHRlcnM6IHsKICAgICAgICB1cHBlcjogZnVuY3Rpb24odmFsdWUpewogICAgICAgICAgICB2YXIgbmV3TmFtZSA9IHZhbHVlWzBdLnRvVXBwZXJDYXNlKCkgKyB2YWx1ZS5zbGljZSgxKTsKICAgICAgICAgICAgcmV0dXJuIG5ld05hbWU7IAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYnVzY2FyOiBmdW5jdGlvbigpewogICAgICAgICAgICB0aGlzLmZpbHRlcmVkVGlwb3Byb2Nlc3NvcyA9IHRoaXMudGlwb3Byb2Nlc3NvczsKICAgICAgICAgICAgaWYgKHRoaXMudHh0QnVzY2EgIT0gJycgJiYgdGhpcy50eHRCdXNjYSAhPSAnICcpeyAgICAgICAgCiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkVGlwb3Byb2Nlc3NvcyA9ICB0aGlzLnRpcG9wcm9jZXNzb3MuZmlsdGVyKHRpcG9wcm9jZXNzbyA9PiB0aXBvcHJvY2Vzc28ubm9tZS5pbmNsdWRlcyh0aGlzLnR4dEJ1c2NhKSApOwogICAgICAgICAgICB9ICAgICAgCiAgICAgICAgfSwKICAgICAgICBhbHRlcmFyOiBmdW5jdGlvbigpewoKICAgICAgICB9LCAgICAgICAKICAgICAgICBnZXRUaXBvcHJvY2Vzc28oKXsKICAgICAgICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgICAgICAgdmFyIHVybCA9IHVybEFQSS5USVBPX1BST0NFU1NPOwogICAgICAgICAgICBheGlvcy5nZXQodXJsKS50aGVuKGZ1bmN0aW9uKHIpewogICAgICAgICAgICAgICAgdm0udGlwb3Byb2Nlc3NvcyA9IHIuZGF0YS5maWx0ZXIodGlwb3Byb2Nlc3NvID0+IHRpcG9wcm9jZXNzby5pbmRhdGl2byApOyAKICAgICAgICAgICAgICAgIHZtLmZpbHRlcmVkVGlwb3Byb2Nlc3NvcyA9IHZtLnRpcG9wcm9jZXNzb3M7CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgdm0udGlwb3Byb2Nlc3NvcyA9IFtdOwogICAgICAgICAgICAgICAgdm0uZmlsdGVyZWRUaXBvcHJvY2Vzc29zID0gdm0udGlwb3Byb2Nlc3NvczsKICAgICAgICAgICAgICAgIHZtLmlzQ29ubmVjdCA9ICggKCBlcnJvciAhPSB1bmRlZmluZWQgICkgPyAoIGVycm9yLm1lc3NhZ2UgPT0gJ05ldHdvcmsgRXJyb3InID8gZmFsc2UgOiB0cnVlICkgOiB0cnVlICk7CiAgICAgICAgICAgICAgICB2bS5lcnJvcnMgPSAoICggZXJyb3IgIT0gdW5kZWZpbmVkICApID8geydFcnJvJzogZXJyb3IucmVzcG9uc2UgfSA6IHt9ICkKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBnZXRFeGNsdWlyOiBmdW5jdGlvbigpewogICAgICAgICAgICB2YXIgdm0gPSB0aGlzOwogICAgICAgICAgICB2YXIgdXJsID0gdXJsQVBJLlRJUE9fUFJPQ0VTU087IC8vICsgdGhpcy5pZEV4Y2x1c2FvOwoKICAgICAgICAgICAgdmFyIHRpcG9wcm9jZXNzb0FsdGVyYXIgPSB0aGlzLmZpbHRlcmVkVGlwb3Byb2Nlc3Nvcy5maWx0ZXIodGlwb3Byb2Nlc3NvID0+IHRpcG9wcm9jZXNzby5pZCA9PSB0aGlzLmlkRXhjbHVzYW8gKVswXTsKICAgICAgICAgICAgYXhpb3MuZGVsZXRlKHVybCwge2RhdGE6ICB0aXBvcHJvY2Vzc29BbHRlcmFyIH0pLnRoZW4oZnVuY3Rpb24ocil7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyKTsKICAgICAgICAgICAgICAgIHZtLnRpcG9wcm9jZXNzb3MgPSB2bS5kZWxldGVWZXRvcih2bS50aXBvcHJvY2Vzc29zKTsKICAgICAgICAgICAgICAgIHZtLmZpbHRlcmVkVGlwb3Byb2Nlc3NvcyA9IHZtLnRpcG9wcm9jZXNzb3M7CiAgICAgICAgICAgICAgICB2bS5lcnJvcnMgPSBbXTsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgdm0uZXJyb3JzID0geydFcnJvJzogZXJyb3IucmVzcG9uc2UgfTsKICAgICAgICAgICAgICAgICAgICB2bS50aXBvcHJvY2Vzc29zID0gW107CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgZGVsZXRlVmV0b3IoYXJyKXsKICAgICAgICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgICAgICAgYXJyID0gYXJyLmZpbHRlcihmdW5jdGlvbihvYmopIHsKICAgICAgICAgICAgICAgIHJldHVybiBvYmouaWQgIT09IHZtLmlkRXhjbHVzYW87CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gYXJyOwogICAgICAgIH0sCiAgICAgICAgYWx0ZXJhclRpcG9wcm9jZXNzbyhmKXsKICAgICAgICAgICAgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShmKSk7CiAgICAgICAgfSwKICAgICAgICBzYWx2YXJBbHRlcmFyKCl7CiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgICAgICAgIHZhciB1cmwgPSB1cmxBUEkuVElQT19QUk9DRVNTTzsKICAgICAgICAgICAgdmFyIGRhdGVGb3JtYXQgPSByZXF1aXJlKCdkYXRlZm9ybWF0Jyk7CiAgICAgICAgICAgIGlmICh0aGlzLnRpcG9wcm9jZXNzb0FsdGVyYXIuaWQgIT0gJycgJiYgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyLmlkICE9IHVuZGVmaW5lZCApewogICAgICAgICAgICAgICAgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyLmRhdGFBbHRlcmFjYW8gPSBkYXRlRm9ybWF0KG5ldyBEYXRlKCksICJ5eXl5LW1tLWRkIGhoOk1NOnNzIik7CiAgICAgICAgICAgICAgICBheGlvcy5wdXQodXJsLCB0aGlzLnRpcG9wcm9jZXNzb0FsdGVyYXIpLnRoZW4oZnVuY3Rpb24oKXsgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHZtLmdldFRpcG9wcm9jZXNzbygpOyAvLyBidXNjYXIgdG9kYXMKICAgICAgICAgICAgICAgICAgICB2bS5pc1Nob3dNb2RhbEFsdGVyYWNhbyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIHZtLmVycm9ycyA9IFtdOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgdm0uZXJyb3JzID0geydFcnJvJzogZXJyb3IucmVzcG9uc2UgfTsKICAgICAgICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyLmRhdGFDcmlhY2FvID0gZGF0ZUZvcm1hdChuZXcgRGF0ZSgpLCAieXl5eS1tbS1kZCBoaDpNTTpzcyIpOwogICAgICAgICAgICAgICAgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyLmluZGF0aXZvID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGF4aW9zLnBvc3QodXJsLCB0aGlzLnRpcG9wcm9jZXNzb0FsdGVyYXIpLnRoZW4oZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICB2bS5nZXRUaXBvcHJvY2Vzc28oKTsgLy8gYnVzY2FyIHRvZGFzCiAgICAgICAgICAgICAgICAgICAgdm0uaXNTaG93TW9kYWxBbHRlcmFjYW8gPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICB2bS5lcnJvcnMgPSBbXTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIHZtLmVycm9ycyA9IHsnRXJybyc6IGVycm9yLnJlc3BvbnNlfTsKICAgICAgICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRlc2NhcnRhckFsdGVyYWNvZXNUaXBvcHJvY2Vzc28oKXsKICAgICAgICAgICAgdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyID0ge307CiAgICAgICAgfSwKICAgICAgICB2YWxpZGFGb3JtdWxhcmlvKCl7CiAgICAgICAgICAgIGlmICh0aGlzLnRpcG9wcm9jZXNzb0FsdGVyYXIubm9tZSApIHsgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB0aGlzLnNhbHZhckFsdGVyYXIoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5lcnJvcnMgPSBbXTsKCiAgICAgICAgICAgIGlmICghdGhpcy50aXBvcHJvY2Vzc29BbHRlcmFyLm5vbWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzLnB1c2goJ0luZm9ybWUgbyBub21lLicpOwogICAgICAgICAgICB9CgogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHJlc3VsdGFkb0J1c2NhOiBmdW5jdGlvbigpewogICAgICAgICAgICBpZiAodGhpcy50eHRCdXNjYSA9PSAnJyB8fCB0aGlzLnR4dEJ1c2NhID09ICcgJyl7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50aXBvcHJvY2Vzc29zOwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRpcG9wcm9jZXNzb3MuZmlsdGVyKHRpcG9wcm9jZXNzbyA9PiB0aXBvcHJvY2Vzc28ubm9tZS5pbmNsdWRlcyh0aGlzLnR4dEJ1c2NhKSApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["TipoProcesso.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TipoProcesso.vue","sourceRoot":"src/components/processo","sourcesContent":["<template>\n    <div>\n        <div id=\"tipoprocesso\" class=\"groove center lista\" v-if=\"isConnect\">\n            <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                <ul>\n                    <li class=\"is-active\" ><a href=\"#\">Buscar</a></li>\n                    <li><a href=\"#\" v-on:click=\"tipoprocessoAlterar = {}; isShowModalAlteracao = true;\" >Novo</a></li>\n                </ul>\n            </nav>\n\n            <div class=\"columns\"> \n                <div class=\"column\">  </div>\n                <div class=\"column is-four-fifths\">\n                    <div class=\"field\">\n                        <input v-model=\"txtBusca\" type=\"text\" class=\"input is-primary\" placeholder=\"Buscar pelo nome do tipo de processo\" aria-label=\"Nome da tipoprocesso\" aria-describedby=\"button-addon\">\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <button class=\"button is-success\" id=\"buscaBtn\" @click=\"buscar\"> Buscar</button>\n                </div>\n            </div>\n\n            <div>\n                <div class=\"tile center\" style=\"margin: 10px;\">\n                    <p class=\"title\" style=\"\"> Tipo de Processo cadastrados </p>\n                </div>\n                <table class=\"table\" style=\"width: 100%;\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 10%;\"><abbr title=\"ID\">Cód</abbr></th>\n                            <th style=\"width: 60%;\">Nome</th>                            \n                            <th style=\"width: 20%;\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"tipoprocesso in filteredTipoprocessos\" :key=\"tipoprocesso.id\">\n                            <td>{{tipoprocesso.id}}</td>\n                            <td>{{tipoprocesso.nome}}</td>\n                            <td>\n                                <button class=\"button is-warning modal-button lista\" v-on:click=\"alterarTipoprocesso(tipoprocesso); isShowModalAlteracao = true;\">\n                                    Alterar\n                                </button>\n                                <button class=\"button is-danger modal-button lista\" v-on:click=\"idExclusao = tipoprocesso.id; isShowModalExclusao = true;\">\n                                    Excluir\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>   \n            </div>\n\n            <div class=\"modal\" id=\"modalAlterar\" v-bind:class=\"{ 'is-active': isShowModalAlteracao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Tipo de processo</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalAlteracao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-tipoprocessol\">\n                                <label class=\"label\">Nome</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div class=\"field\">\n                                <p class=\"control\">\n                                    <input class=\"input is-primary\" type=\"text\" placeholder=\"Informe o nome\" v-model=\"tipoprocessoAlterar.nome\">\n                                </p>\n                                </div>\n                            </div>\n                        </div>\n\n                    <!--    \n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-tipoprocessol\">\n                                <label class=\"label\">Data</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <datetime datetime type=\"datetime\" v-model=\"tipoprocessoAlterar.data_criacao\"></datetime>\n                            </div>\n                        </div>    \n                    -->\n\n                    <p v-if=\"this.errors.length\">\n                        <b>Por favor, corrija o(s) seguinte(s) erro(s):</b>\n                        <ul>\n                        <li v-for=\"error in errors\" :key=\"error.id\" class=\"danger\">\n                            {{ error }}\n                        </li>\n                        </ul>\n                    </p>\n                    </section>\n                        <footer class=\"modal-card-foot\">                    \n                        <button class=\"button\" v-on:click=\"isShowModalAlteracao = false\" >Descartar</button>\n                        <button class=\"button is-success\" v-on:click.stop.prevent=\"validaFormulario();\" >Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n\n            <div class=\"modal\" id=\"modalExcluir\" v-bind:class=\"{ 'is-active': isShowModalExclusao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Deseja realmente excluir?</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalExclusao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        Atenção! Essa exclusão não poderá ser revertida.\n                    </section>\n                        <footer class=\"modal-card-foot\">\n                        <button class=\"button\" v-on:click=\"isShowModalExclusao = false\" >Descartar</button>\n                        <button class=\"button is-success\" @click=\"getExcluir\"  v-on:click=\"isShowModalExclusao = false\">Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n        </div>\n        <div id=\"tipoprocesso\" class=\"groove center lista\" v-else>\n            <h1> SEM CONEXÃO AO SEVIDOR </h1>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport urlAPI from '../../utilities/urlapi';\n//import { Datetime } from 'vue-datetime';\n\nexport default {\n    name: 'Tipoprocesso',  \n    components: {\n  //      datetime: Datetime\n    },  \n    created: function(){       \n        this.getTipoprocesso();\n    },\n    data(){\n        return {\n            tipoprocessos: [],\n            filteredTipoprocessos: [],\n            tipoprocessoAlterar: {},\n            listaRepositorio: [],\n            txtBusca: '',\n            idExclusao: '',\n            isShowModalAlteracao: false,\n            isShowModalExclusao: false,\n            errors: [],\n            isConnect: true\n        }\n    },\n    filters: {\n        upper: function(value){\n            var newName = value[0].toUpperCase() + value.slice(1);\n            return newName; \n        }\n    },\n    methods: {\n        buscar: function(){\n            this.filteredTipoprocessos = this.tipoprocessos;\n            if (this.txtBusca != '' && this.txtBusca != ' '){        \n                this.filteredTipoprocessos =  this.tipoprocessos.filter(tipoprocesso => tipoprocesso.nome.includes(this.txtBusca) );\n            }      \n        },\n        alterar: function(){\n\n        },       \n        getTipoprocesso(){\n            var vm = this;\n            var url = urlAPI.TIPO_PROCESSO;\n            axios.get(url).then(function(r){\n                vm.tipoprocessos = r.data.filter(tipoprocesso => tipoprocesso.indativo ); \n                vm.filteredTipoprocessos = vm.tipoprocessos;\n            }).catch(function (error) {\n                vm.tipoprocessos = [];\n                vm.filteredTipoprocessos = vm.tipoprocessos;\n                vm.isConnect = ( ( error != undefined  ) ? ( error.message == 'Network Error' ? false : true ) : true );\n                vm.errors = ( ( error != undefined  ) ? {'Erro': error.response } : {} )\n            });\n        },\n        getExcluir: function(){\n            var vm = this;\n            var url = urlAPI.TIPO_PROCESSO; // + this.idExclusao;\n\n            var tipoprocessoAlterar = this.filteredTipoprocessos.filter(tipoprocesso => tipoprocesso.id == this.idExclusao )[0];\n            axios.delete(url, {data:  tipoprocessoAlterar }).then(function(r){\n                console.log(r);\n                vm.tipoprocessos = vm.deleteVetor(vm.tipoprocessos);\n                vm.filteredTipoprocessos = vm.tipoprocessos;\n                vm.errors = [];\n            }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                    vm.tipoprocessos = [];\n                    \n            });\n        },\n        deleteVetor(arr){\n            var vm = this;\n            arr = arr.filter(function(obj) {\n                return obj.id !== vm.idExclusao;\n            });\n            return arr;\n        },\n        alterarTipoprocesso(f){\n            this.tipoprocessoAlterar = JSON.parse(JSON.stringify(f));\n        },\n        salvarAlterar(){\n            var vm = this;\n            var url = urlAPI.TIPO_PROCESSO;\n            var dateFormat = require('dateformat');\n            if (this.tipoprocessoAlterar.id != '' && this.tipoprocessoAlterar.id != undefined ){\n                this.tipoprocessoAlterar.dataAlteracao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                axios.put(url, this.tipoprocessoAlterar).then(function(){                    \n                    vm.getTipoprocesso(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                }).finally(function () {\n                    \n                });\n            }else{\n                this.tipoprocessoAlterar.dataCriacao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                this.tipoprocessoAlterar.indativo = true;\n                axios.post(url, this.tipoprocessoAlterar).then(function(){\n                    vm.getTipoprocesso(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response};\n                }).finally(function () {\n                    \n                });\n            }\n        },\n        descartarAlteracoesTipoprocesso(){\n            this.tipoprocessoAlterar = {};\n        },\n        validaFormulario(){\n            if (this.tipoprocessoAlterar.nome ) {                \n                this.salvarAlterar();\n            }\n\n            this.errors = [];\n\n            if (!this.tipoprocessoAlterar.nome) {\n                this.errors.push('Informe o nome.');\n            }\n\n        }\n    },\n    computed: {\n        resultadoBusca: function(){\n            if (this.txtBusca == '' || this.txtBusca == ' '){\n                return this.tipoprocessos;\n            }else{\n                return this.tipoprocessos.filter(tipoprocesso => tipoprocesso.nome.includes(this.txtBusca) );\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .groove {border-style: groove;}\n    .center { text-align: center; }\n    .lista { margin: 3%; padding: 3%;}\n    .danger { color: red; }\n</style>"]}]}