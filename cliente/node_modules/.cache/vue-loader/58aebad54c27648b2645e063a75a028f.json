{"remainingRequest":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/processo/Processo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/processo/Processo.vue","mtime":1611353194962},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Processo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Processo.vue","sourceRoot":"src/components/processo","sourcesContent":["<template>\n    <div>\n        <div id=\"processo\" class=\"groove center lista\" v-if=\"isConnect\">\n\n            <div class=\"notification is-danger is-light\" v-if=\"hasNewProcesso\">\n                <button class=\"delete\" v-on:click=\"hasNewProcesso = false;\"></button>\n                Novos alertas de processo. {{ msgNewProcesso }}\n            </div>\n\n            <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                <ul>\n                    <li class=\"is-active\" ><a href=\"#\">Buscar</a></li>\n                    <li><a href=\"#\" v-on:click=\"processoAlterar = {}; isShowModalAlteracao = true;\" >Novo</a></li>\n                </ul>\n            </nav>\n\n            <div class=\"columns\"> \n                <div class=\"column\">  </div>\n                <div class=\"column is-four-fifths\">\n                    <div class=\"field\">\n                        <input v-model=\"txtBusca\" type=\"text\" class=\"input is-primary\" placeholder=\"Buscar pelo título da processo\" aria-label=\"Nome da processo\" aria-describedby=\"button-addon\">\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <button class=\"button is-success\" id=\"buscaBtn\" @click=\"buscar\"> Buscar</button>\n                </div>\n            </div>\n\n            <div>\n                <div class=\"tile center\" style=\"margin: 10px;\">\n                    <p class=\"title\" style=\"\"> Processos Cadastrados </p>\n                </div>\n                <table class=\"table\" style=\"width: 100%;\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 10%;\" class=\"is-hidden-mobile\"><abbr title=\"ID\">Cód</abbr></th>\n                            <th style=\"width: 30%;\">Nome</th>\n                            <th style=\"width: 20%;\">Descrição</th>\n                            <th style=\"width: 20%;\" class=\"is-hidden-mobile\">Prioridade</th>\n                            <th style=\"width: 20%;\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"processo in filteredProcessos\" :key=\"processo.id\" :class=\"processo.status ? 'succ-back' : 'info-back' \">\n                            <td class=\"is-hidden-mobile\">{{processo.id}}</td>\n                            <td>{{processo.nome}}</td>\n                            <td>{{processo.descricao}}</td>\n                            <td class=\"is-hidden-mobile\">{{processo.prioridade}}</td>\n                            <td>\n                                <button class=\"button is-warning modal-button lista\" v-on:click=\"alterarProcesso(processo); isShowModalAlteracao = true;\">\n                                    Alterar\n                                </button>\n                                <button class=\"button is-danger modal-button lista\" v-on:click=\"idExclusao = processo.id; isShowModalExclusao = true;\">\n                                    Excluir\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>   \n            </div>\n\n            <div class=\"modal\" id=\"modalAlterar\" v-bind:class=\"{ 'is-active': isShowModalAlteracao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Processo</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalAlteracao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Nome</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div class=\"field\">\n                                <p class=\"control\">\n                                    <input class=\"input is-primary\" type=\"text\" placeholder=\"Informe o nome\" v-model=\"processoAlterar.nome\">\n                                </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Descrição</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div style=\"width: 100%;\">\n                                    <textarea class=\"textarea is-primary\" placeholder=\"Descreva um resumo do processo\" v-model=\"processoAlterar.descricao\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Nível de Prioridade</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div class=\"field\">\n                                <p class=\"control\">\n                                    <input class=\"input is-primary\" type=\"text\" maxlength=\"1\" placeholder=\"Informe a prioridade\" v-on:keypress=\"isNumber($event)\" v-model=\"processoAlterar.prioridade\">\n                                </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Operador</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div style=\"width: 100%;\">\n                                    <div class=\"select is-primary\" style=\"width: 100%;\">\n                                    <select v-model=\"processoAlterar.idoperador\" style=\"width: 100%;\">\n                                        <option v-for=\"operador in listaOperador\" :value=\"operador.id\" :key=\"operador.id\">\n                                            {{ operador.nome }} \n                                        </option>\n                                    </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Tipo processo</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div style=\"width: 100%;\">\n                                    <div class=\"select is-primary\" style=\"width: 100%;\">\n                                    <select v-model=\"processoAlterar.idtipoprocesso\" style=\"width: 100%;\">\n                                        <option v-for=\"tipo in listaTipoProcesso\" :value=\"tipo.id\" :key=\"tipo.id\">\n                                            {{ tipo.nome }} \n                                        </option>\n                                    </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <label class=\"checkbox\" style=\"margin-left:2%;\">\n                            <input type=\"checkbox\" v-model=\"processoAlterar.status\">\n                                Processo concluido?\n                            </label>\n                        </div>\n\n                    <!--    \n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-processol\">\n                                <label class=\"label\">Data</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <datetime datetime type=\"datetime\" v-model=\"processoAlterar.data_criacao\"></datetime>\n                            </div>\n                        </div>    \n                    -->\n\n                    <p v-if=\"this.errors.length\">\n                        <b>Por favor, corrija o(s) seguinte(s) erro(s):</b>\n                        <ul>\n                        <li v-for=\"error in errors\" :key=\"error.id\" class=\"danger\">\n                            {{ error }}\n                        </li>\n                        </ul>\n                    </p>\n                    </section>\n                        <footer class=\"modal-card-foot\">                    \n                        <button class=\"button\" v-on:click=\"isShowModalAlteracao = false\" >Descartar</button>\n                        <button class=\"button is-success\" v-on:click.stop.prevent=\"validaFormulario();\" >Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n\n            <div class=\"modal\" id=\"modalExcluir\" v-bind:class=\"{ 'is-active': isShowModalExclusao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Deseja realmente excluir?</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalExclusao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        Atenção! Essa exclusão não poderá ser revertida.\n                    </section>\n                        <footer class=\"modal-card-foot\">\n                        <button class=\"button\" v-on:click=\"isShowModalExclusao = false;descartarAlteracoesProcesso\" >Descartar</button>\n                        <button class=\"button is-success\" @click=\"getExcluir\"  v-on:click=\"isShowModalExclusao = false\">Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n        </div>\n        <div id=\"processo\" class=\"groove center lista\" v-else>\n            <h1> SEM CONEXÃO AO SEVIDOR </h1>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport urlAPI from '../../utilities/urlapi';\n//import { Datetime } from 'vue-datetime';\n\nexport default {\n    name: 'Processo',  \n    components: {\n  //      datetime: Datetime\n    },  \n    created: function(){       \n        this.getProcesso();\n        this.getOperador();\n        this.getTipoProcesso();\n        this.verificaFilaRabbit();\n    },\n    data(){\n        return {\n            processos: [],\n            filteredProcessos: [],\n            processoAlterar: {},\n            listaOperador: [],\n            listaTipoProcesso: [],\n            txtBusca: '',\n            idExclusao: '',\n            isShowModalAlteracao: false,\n            isShowModalExclusao: false,\n            errors: [],\n            isConnect: true,\n            hasNewProcesso: false,\n            msgNewProcesso: ''\n        }\n    },\n    filters: {\n        upper: function(value){\n            var newName = value[0].toUpperCase() + value.slice(1);\n            return newName; \n        }\n    },\n    methods: {\n        buscar: function(){\n            this.filteredProcessos = this.processos;\n            if (this.txtBusca != '' && this.txtBusca != ' '){        \n                this.filteredProcessos =  this.processos.filter(processo => processo.nome.includes(this.txtBusca) );\n            }      \n        },\n        alterar: function(){\n\n        },\n        getOperador(){\n            var vm = this;\n            var url = urlAPI.OPERADOR;\n            axios.get(url).then(function(r){\n                vm.listaOperador = r.data.filter(operador => operador.indativo ); \n                vm.errors = [];\n            }).catch(function (error) {\n                vm.listaOperador = [];                    \n                vm.errors = {'Erro': error.response };                  \n            }).finally(function () {\n                \n            });\n        },\n        getTipoProcesso(){\n            var vm = this;\n            var url = urlAPI.TIPO_PROCESSO;\n            axios.get(url).then(function(r){\n                vm.listaTipoProcesso = r.data.filter(tipo => tipo.indativo ); \n                vm.errors = [];\n            }).catch(function (error) {\n                vm.listaTipoProcesso = [];                    \n                vm.errors = {'Erro': error.response };                  \n            }).finally(function () {\n                \n            });\n        },\n        getProcesso(){\n            var vm = this;\n            var url = urlAPI.PROCESSO;\n            axios.get(url).then(function(r){\n                vm.processos = r.data.filter(processo => processo.indativo ); \n                vm.filteredProcessos = vm.processos;\n            }).catch(function (error) {\n                vm.processos = [];\n                vm.filteredProcessos = vm.processos;\n                vm.isConnect = ( ( error != undefined  ) ? ( error.message == 'Network Error' ? false : true ) : true );\n                vm.errors = ( ( error != undefined  ) ? {'Erro': error.response } : {} )\n            });\n        },\n        getExcluir: function(){\n            var vm = this;\n            var url = urlAPI.PROCESSO ; //+ this.idExclusao;\n            var processoAlterar = this.filteredProcessos.filter(processo => processo.id == this.idExclusao )[0];\n            \n            //axios.delete(url).then(function(r){\n            axios.delete(url, { data: processoAlterar }).then(function(r){\n                console.log(r);\n                vm.processos = vm.deleteVetor(vm.processos);\n                vm.filteredProcessos = vm.processos;\n                vm.errors = [];\n            }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                    vm.processos = [];\n                    \n            }).finally(function () {\n                \n            });\n        },\n        deleteVetor(arr){\n            var vm = this;\n            arr = arr.filter(function(obj) {\n                return obj.id !== vm.idExclusao;\n            });\n            return arr;\n        },\n        alterarProcesso(f){\n            this.processoAlterar = JSON.parse(JSON.stringify(f));\n        },\n        salvarAlterar(){\n            var vm = this;\n            var url = urlAPI.PROCESSO;\n            var dateFormat = require('dateformat');\n            this.processoAlterar.status = ( this.processoAlterar.status ? true : false )\n            if (this.processoAlterar.id != '' && this.processoAlterar.id != undefined ){\n                url = url + this.processoAlterar.id;                \n                this.processoAlterar.dataAlteracao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                axios.put(url, this.processoAlterar).then(function(){                    \n                    vm.getProcesso(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                }).finally(function () {\n                    \n                });\n            }else{\n                this.processoAlterar.dataCriacao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                this.processoAlterar.indativo = true;\n                axios.post(url, this.processoAlterar).then(function(){\n                    vm.getProcesso(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response};\n                }).finally(function () {\n                    \n                });\n            }\n        },\n        descartarAlteracoesProcesso(){\n            this.processoAlterar = {};            \n        },\n        validaFormulario(){\n            if (this.processoAlterar.nome && this.processoAlterar.descricao \n                && this.processoAlterar.idoperador && this.processoAlterar.idtipoprocesso\n                && this.processoAlterar.prioridade \n                ) {                \n                this.salvarAlterar();\n            }\n\n            this.errors = [];\n\n            if (!this.processoAlterar.nome) {\n                this.errors.push('Informe o nome.');\n            }\n            if (!this.processoAlterar.descricao) {\n                this.errors.push('Informe a descricao.');\n            }\n            if (!this.processoAlterar.idoperador) {\n                this.errors.push('Informe a Operador.');\n            }\n            if (!this.processoAlterar.idtipoprocesso) {\n                this.errors.push('Informe o Tipo de Processo.');\n            }\n            if (!this.processoAlterar.prioridade) {\n                this.errors.push('Informe a prioridade.');\n            }\n          \n        },\n        verificaFilaRabbit() {\n            axios.get('/api/acesso/rabbit_processo')\n            .then(res => {\n                this.hasNewProcesso = res.data.mostra;\n                this.msgNewProcesso = res.data.msg;\n            });\n        },\n        isNumber(e) {\n            let char = String.fromCharCode(e.keyCode);\n            if (/^[0-9]+$/.test(char)) return true;\n            else e.preventDefault();\n        }\n    },\n    computed: {\n        resultadoBusca: function(){\n            if (this.txtBusca == '' || this.txtBusca == ' '){\n                return this.processos;\n            }else{\n                return this.processos.filter(processo => processo.nome.includes(this.txtBusca) );\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .groove {border-style: groove;}\n    .center { text-align: center; }\n    .lista { margin: 3%; padding: 3%;}\n    .danger { color: red; }\n    .info-back { background-color: #ffff80; }\n    .succ-back { background-color: #bfff80; }\n</style>"]}]}