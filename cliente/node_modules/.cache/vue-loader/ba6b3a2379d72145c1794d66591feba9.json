{"remainingRequest":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/gestao/Repositorio.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/src/components/gestao/Repositorio.vue","mtime":1611605544117},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/git_projetos/git_sigo_app_login/sigo_app/cliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyb292ZSB7Ym9yZGVyLXN0eWxlOiBncm9vdmU7fQouY2VudGVyIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9Ci5saXN0YSB7IG1hcmdpbjogMyU7IHBhZGRpbmc6IDMlO30KLmRhbmdlciB7IGNvbG9yOiByZWQ7IH0K"},{"version":3,"sources":["Repositorio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuUA;AACA;AACA;AACA","file":"Repositorio.vue","sourceRoot":"src/components/gestao","sourcesContent":["<template>\n    <div>\n        <div id=\"repositorio\" class=\"groove center lista\" v-if=\"isConnect\">\n\n            <div class=\"notification is-danger is-light\" v-if=\"hasNewNorma\">\n                <button class=\"delete\" v-on:click=\"hasNewNorma = false;\"></button>\n                Novas normas foram adicionadas ao repositório principal.\n            </div>\n\n            <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                <ul>\n                    <li class=\"is-active\" ><a href=\"#\">Buscar</a></li>\n                    <li><a href=\"#\" v-on:click=\"repositorioAlterar = {}; isShowModalAlteracao = true;\" >Novo</a></li>\n                </ul>\n            </nav>\n\n            <div class=\"columns\"> \n                <div class=\"column\">  </div>\n                <div class=\"column is-four-fifths\">\n                    <div class=\"field\">\n                        <input v-model=\"txtBusca\" type=\"text\" class=\"input is-primary\" placeholder=\"Buscar pelo nome da repositório\" aria-label=\"Nome da repositório\" aria-describedby=\"button-addon\">\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <button class=\"button is-success\" id=\"buscaBtn\" @click=\"buscar\"> Buscar</button>\n                </div>\n            </div>\n\n            <div>\n                <div class=\"tile center\" style=\"margin: 10px;\">\n                    <p class=\"title\" style=\"\"> Repositórios Cadastrados </p>\n                </div>\n                <table class=\"table\" style=\"width: 100%;\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 5%;\"><abbr title=\"ID\">Cód</abbr></th>\n                            <th style=\"width: 30%;\">Nome</th>\n                            <th style=\"width: 20%;\" class=\"is-hidden-mobile\">Repositório</th>\n                            <th style=\"width: 20%;\">Url</th>\n                            <th style=\"width: 25%;\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"repositorio in filteredRepositorios\" :key=\"repositorio.id\">\n                            <td>{{repositorio.id}}</td>\n                            <td>{{repositorio.nome}}</td>\n                            <td class=\"is-hidden-mobile\">{{repositorio.descricao}}</td>\n                            <td>{{repositorio.url}}</td>\n                            <td>\n                                <button class=\"button is-warning modal-button lista\" v-on:click=\"alterarRepositorio(repositorio); isShowModalAlteracao = true;\">\n                                    Alterar\n                                </button>\n                                <button class=\"button is-danger modal-button lista\" v-on:click=\"idExclusao = repositorio.id; isShowModalExclusao = true;\">\n                                    Excluir\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>   \n            </div>\n\n            <div class=\"modal\" id=\"modalAlterar\" v-bind:class=\"{ 'is-active': isShowModalAlteracao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Repositório</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalAlteracao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-repositoriol\">\n                                <label class=\"label\">Nome</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div class=\"field\">\n                                <p class=\"control\">\n                                    <input class=\"input is-primary\" type=\"text\" placeholder=\"Informe o nome\" v-model=\"repositorioAlterar.nome\">\n                                </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-repositoriol\">\n                                <label class=\"label\">Descrição</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div style=\"width: 100%;\">\n                                    <textarea class=\"textarea is-primary\" placeholder=\"Descreva um resumo da repositorio\" v-model=\"repositorioAlterar.descricao\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-repositoriol\">\n                                <label class=\"label\">URL</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <div class=\"field\">\n                                <p class=\"control\">\n                                    <input class=\"input is-primary\" type=\"text\" placeholder=\"Informe a url\" v-model=\"repositorioAlterar.url\" v-on:blur=\"isValidHttpUrl()\">\n                                </p>\n                                </div>\n                            </div>\n                        </div>\n                    \n                    <!--    \n                        <div class=\"field is-horizontal\">\n                            <div class=\"field-label is-repositoriol\">\n                                <label class=\"label\">Data</label>\n                            </div>\n                            <div class=\"field-body\">\n                                <datetime datetime type=\"datetime\" v-model=\"repositorioAlterar.data_criacao\"></datetime>\n                            </div>\n                        </div>    \n                    -->\n\n                    <p v-if=\"this.errors.length\">\n                        <b>Por favor, corrija o(s) seguinte(s) erro(s):</b>\n                        <ul>\n                        <li v-for=\"error in errors\" :key=\"error.id\" class=\"danger\">\n                            {{ error }}\n                        </li>\n                        </ul>\n                    </p>\n                    </section>\n                        <footer class=\"modal-card-foot\">                    \n                        <button class=\"button\" v-on:click=\"isShowModalAlteracao = false\" >Descartar</button>\n                        <button class=\"button is-success\" v-on:click.stop.prevent=\"validaFormulario();\" >Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n\n            <div class=\"modal\" id=\"modalExcluir\" v-bind:class=\"{ 'is-active': isShowModalExclusao }\" >\n                <div class=\"modal-background\"></div>\n                <div class=\"modal-card\">\n                    <header class=\"modal-card-head\">\n                        <p class=\"modal-card-title\">Deseja realmente excluir?</p>\n                        <button class=\"delete\" aria-label=\"close\" v-on:click=\"isShowModalExclusao = false\"></button>\n                    </header>\n                    <section class=\"modal-card-body\">\n                        Atenção! Essa exclusão não poderá ser revertida.\n                    </section>\n                        <footer class=\"modal-card-foot\">\n                        <button class=\"button\" v-on:click=\"isShowModalExclusao = false\" >Descartar</button>\n                        <button class=\"button is-success\" @click=\"getExcluir\"  v-on:click=\"isShowModalExclusao = false\">Salvar Alterações</button>\n                    </footer>\n                </div>\n            </div>\n        </div>\n        <div id=\"operador\" class=\"groove center lista\" v-else>\n            <h1> SEM CONEXÃO AO SEVIDOR </h1>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport urlAPI from '../../utilities/urlapi';\n\nexport default {\n    name: 'Repositorio',  \n    components: {\n  //      datetime: Datetime\n    },  \n    created: function(){       \n        this.getRepositorio();\n        this.verificaFilaRabbit();\n    },\n    data(){\n        return {\n            repositorios: [],\n            filteredRepositorios: [],\n            repositorioAlterar: {},\n            txtBusca: '',\n            idExclusao: '',\n            isShowModalAlteracao: false,\n            isShowModalExclusao: false,\n            errors: [],\n            isConnect: true,\n            hasNewNorma: false\n        }\n    },\n    filters: {\n        upper: function(value){\n            var newName = value[0].toUpperCase() + value.slice(1);\n            return newName; \n        }\n    },\n    methods: {\n        buscar: function(){\n            this.filteredRepositorios = this.repositorios;\n            if (this.txtBusca != '' && this.txtBusca != ' '){        \n                this.filteredRepositorios =  this.repositorios.filter(repositorio => repositorio.nome.includes(this.txtBusca) );\n            }      \n        },\n        alterar: function(){\n\n        },\n        getRepositorio(){\n            var vm = this;\n            var url = urlAPI.REPOSITORIO;\n            axios.get(url).then(function(r){\n                vm.repositorios = r.data.filter(repositorio => repositorio.indativo ); \n                vm.filteredRepositorios = vm.repositorios;\n            }).catch(function (error) {\n                vm.repositorios = [];\n                vm.filteredRepositorios = vm.repositorios;\n                vm.isConnect = ( ( error != undefined  ) ? ( error.message == 'Network Error' ? false : true ) : true );\n                vm.errors = ( ( error != undefined  ) ? {'Erro': error.response } : {} )\n            });\n        },\n        getExcluir: function(){\n            var vm = this;\n            var url = urlAPI.REPOSITORIO; // + this.idExclusao;\n            var repositorioAlterar = this.filteredRepositorios.filter(repositorio => repositorio.id == this.idExclusao )[0];\n            //axios.delete(url).then(function(r){\n            axios.delete(url, { data: repositorioAlterar }).then(function(r){\n                console.log(r);\n                vm.repositorios = vm.deleteVetor(vm.repositorios);\n                vm.filteredRepositorios = vm.repositorios;\n                vm.errors = [];\n            }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                    vm.repositorios = [];\n                    \n            }).finally(function () {\n                \n            });\n        },\n        deleteVetor(arr){\n            var vm = this;\n            arr = arr.filter(function(obj) {\n                return obj.id !== vm.idExclusao;\n            });\n            return arr;\n        },\n        alterarRepositorio(f){\n            this.repositorioAlterar = JSON.parse(JSON.stringify(f));\n        },\n        salvarAlterar(){\n            var vm = this;\n            var url = urlAPI.REPOSITORIO;\n            var dateFormat = require('dateformat');\n            if (this.repositorioAlterar.id != '' && this.repositorioAlterar.id != undefined ){\n                //url = url + this.repositorioAlterar.id;\n                this.repositorioAlterar.dataAlteracao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                axios.put(url, this.repositorioAlterar).then(function(){                    \n                    vm.getRepositorio(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response };\n                }).finally(function () {\n                    \n                });\n            }else{\n                this.repositorioAlterar.dataCriacao = dateFormat(new Date(), \"yyyy-mm-dd hh:MM:ss\");\n                this.repositorioAlterar.indativo = true;\n                axios.post(url, this.repositorioAlterar).then(function(){\n                    vm.getRepositorio(); // buscar todas\n                    vm.isShowModalAlteracao = false;\n                    vm.errors = [];\n                }).catch(function (error) {\n                    vm.errors = {'Erro': error.response};\n                }).finally(function () {\n                    \n                });\n            }\n        },\n        descartarAlteracoesRepositorio(){\n            this.repositorioAlterar = {};\n        },\n        validaFormulario(){\n            if (this.repositorioAlterar.nome && this.repositorioAlterar.descricao && this.repositorioAlterar.url ) {                \n                this.salvarAlterar();\n            }\n\n            this.errors = [];\n\n            if (!this.repositorioAlterar.nome) {\n                this.errors.push('Informe o nome.');\n            }\n            if (!this.repositorioAlterar.descricao) {\n                this.errors.push('Informe a descricao.');\n            }\n            if (!this.repositorioAlterar.url) {\n                this.errors.push('Informe a url.');\n            }\n\n        },\n        isValidHttpUrl() {\n            var url = '';\n            if (this.repositorioAlterar.url){\n                try {\n                    url = new URL(this.repositorioAlterar.url);\n                } catch (_) {\n                    alert( \"Por favor, informe uma URL válida!\" );\n                    this.repositorioAlterar.url = '';\n                    return false;  \n                }\n\n                return url.protocol === \"http:\" || url.protocol === \"https:\";\n            }else{\n                return false;\n            }\n        } ,\n        verificaFilaRabbit() {\n            axios.get('/api/acesso/rabbit_norma')\n            .then(res => {\n                this.hasNewNorma = res.data.mostra;\n            });\n        }\n    },\n    computed: {\n        resultadoBusca: function(){\n            if (this.txtBusca == '' || this.txtBusca == ' '){\n                return this.repositorios;\n            }else{\n                return this.repositorios.filter(repositorio => repositorio.nome.includes(this.txtBusca) );\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .groove {border-style: groove;}\n    .center { text-align: center; }\n    .lista { margin: 3%; padding: 3%;}\n    .danger { color: red; }\n</style>"]}]}